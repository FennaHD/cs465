import sys
from crypto_extension import CryptoExtension as ce
from math import gcd
import unittest


class CryptoExtensionTest(unittest.TestCase):

	def test_pair_generator_positive(self):
		e = 65537
		p, q = ce.generatePairRelativelyPrimeTo(e)
		self.assertEqual(1, gcd((p-1)*(q-1), e))

	def test_pair_generator_negative(self):
		e = 65537
		p, q = ce.generatePairRelativelyPrimeTo(e)
		self.assertNotEqual(2, gcd((p-1)*(q-1), e))

	def test_verification_positive(self):
		sys.setrecursionlimit(2100)
		n = 54801763582610421196016208692091806182968007604976202398222567110867404951429021299443190786471480187073149609643936640175178907242900581471429768006509852954078409822982585809411962518583298919753368017489975224568761186105461354182518689538304836264604325150661813911572652251163318683790442325672421837271
		e = 65537
		d = 31476918176605643912318814468108272581068170808461162196565178353516055428027566851930055247801179924042824217706436165007770566326571350356730255536094875219553414237675116327380569585237361673910283417438178635757441492442202035155510274445101030500973591678622274367858945425007572930865802120692726660089
		self.assertTrue(ce.verifyNumsLessThanN(n, e, d))
